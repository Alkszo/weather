{"version":3,"sources":["components/CurrentWeatherDetails.js","components/CurrentWeather.js","components/Title.js","components/Search.js","components/DayDetails.js","components/Day.js","components/DaysList.js","components/images/icons/clear sky.jpg","components/images/icons/fewClouds.JPG","components/images/icons/overcastClouds.JPG","components/images/icons/scatteredClouds.JPG","components/images/icons/showerRain.JPG","components/images/icons/rain.JPG","components/images/icons/thunder.JPG","components/images/icons/snow.JPG","components/images/icons/mist.JPG","components/images/icons/moon.JPG","components/images/icons/moonClouds.JPG","components/images/months/January.jpg","components/images/months/February.jpg","components/images/months/March.jpg","components/images/months/April.jpg","components/images/months/May.jpg","components/images/months/June.jpg","components/images/months/July.jpg","components/images/months/August.jpg","components/images/months/September.jpg","components/images/months/October.jpg","components/images/months/November.jpg","components/images/months/December.jpg","components/Home.js","components/images/compass.jpg","components/About.js","components/Navbar.js","components/Loading.js","components/images/where-in-tabula.jpg","components/LocationEroor.js","components/images/beatus-medieval-map.jpg","components/SearchError.js","components/App.js","components/keys.js","serviceWorker.js","index.js"],"names":["CurrentWeatherDetails","todaysWeather","getIcon","icons","trigger","className","position","modal","map","hour","style","color","dt_txt","slice","src","length","icon","weather","alt","description","main","temp","toFixed","feels_like","humidity","CurrentWeather","data","today","datum","includes","push","format","Title","city","name","Search","onSearch","useState","text","setText","onSubmit","e","preventDefault","type","onChange","target","value","DayDetails","Day","afternoon","filter","represent","DaysList","tomorrow","secondDay","thirdDay","fourthDay","fifthDay","combinedWeather","dailyData","setDailyData","useEffect","setData","day","key","mon","Date","getMonth","bcgImages","january","february","march","april","may","june","july","august","september","october","november","december","id","clearSky","moon","fewClouds","moonClouds","scatteredClouds","overcastClouds","showerRain","rain","thunder","snow","mist","forcast","Home","backgroundImage","list","About","href","compass","Navbar","activeClassName","exact","to","Loading","LocationError","getLocation","SearchError","App","props","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","fetchData","setState","locationError","fetch","then","res","json","searchError","ok","catch","state","lacationError","this","path","render","component","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.bf947b15.chunk.js","sourcesContent":["import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\n\nconst CurrentWeatherDetails = ({ todaysWeather, icons, getIcon }) => {\n  \n        \n    return (\n        <Popup trigger={<button className=\"details-button\"> Show detailed forcast</button>} position=\"center\" className=\"weather-details\" modal>\n        \n        \n      \n        \n    {todaysWeather.map(hour => \n        \n     \n     <div className=\"weather-detailed-description\">\n         <div>\n         <p style={{color: `red`}}>{hour.dt_txt.slice(11, 16)}</p>    \n         </div>\n         <div className=\"weather-info\">\n \n         <div>\n         <img src={getIcon(hour).length === 1  ? getIcon(hour)[0].icon : `http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`} alt=\"icon\" />\n         <p>{hour.weather[0].description}</p>\n         </div>\n         <div><p>Temperature: </p><br/>\n         <p>  {(hour.main.temp * 2).toFixed() / 2} </p>                  \n         </div>\n         <div><p>Feels like: </p><br />\n             <p>{(hour.main.feels_like * 2).toFixed() / 2}</p>\n         </div>\n         <div><p>Humidity: </p><br />\n             <p>{hour.main.humidity} %</p>\n         </div>\n \n         </div>\n     </div>\n     \n    \n    )}\n\n        \n      </Popup>\n    )\n}\n\nexport default CurrentWeatherDetails","import React from 'react';\nimport Moment from 'react-moment';\nimport CurrentWeatherDetails from './CurrentWeatherDetails';\n\nconst CurrentWeather = ({ data, icons, getIcon }) => {\n    const today = data[0].dt_txt.slice(0, 10)\n    let todaysWeather = []\n    data.map(datum => datum.dt_txt.includes(today) ? todaysWeather.push(datum) : todaysWeather)\n    \n    \n    \n       \n    return (\n        <>\n        <div className='current-card'>\n        <div>                \n                <Moment format=\"dddd Do of MMMM YYYY\">\n                    {data[0].dt_txt}\n                </Moment>        \n        </div>  \n\n        <img src={getIcon(data[0]).length === 1 ? getIcon(data[0])[0].icon : `http://openweathermap.org/img/wn/${data[0].weather[0].icon}@2x.png`} alt=\"icon\" />\n        <div><p>{data[0].weather[0].description}</p></div>\n        <div>Temperature: {(data[0].main.temp * 2).toFixed() / 2}</div>\n        <div>Feels like: {(data[0].main.feels_like * 2).toFixed() / 2}</div>\n        <div>Humidity: {data[0].main.humidity} %</div>\n        <CurrentWeatherDetails todaysWeather={todaysWeather} icons={icons} getIcon={getIcon}/>\n        </div>\n        </>\n    )\n}\n\nexport default CurrentWeather;","import React from 'react'\n\nconst Title = ({ data }) => {    \n    return (\n    <div className=\"title\"><span className=\"red\">T</span>his is the weather in <span className=\"red\">{data.city.name[0]}</span>{data.city.name.slice(1)}</div>\n    )\n};\n\nexport default Title","import React, { useState } from 'react';\n\nconst Search = ({ onSearch }) => {\n    \n    const [text, setText] = useState('')\n\n    const handleChange = (e) => {\n        setText(e.target.value)        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSearch(text)\n    }\n\n      \n        return (\n        \n        <div className=\"main-search\">\n            <div>\n                <p><span className=\"red\">E</span>nter the name of a city or region to display <span className=\"red\">w</span>eather</p>\n            </div>\n            <div>            \n                <form onSubmit={handleSubmit} className=\"search\">\n                    <input type=\"text\" onChange={handleChange} />\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </div>\n        </div>\n        \n        )\n    \n}\n\nexport default Search;","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\n\nconst DayDetails = ({ data, icons, getIcon }) => {\n    \n    return (\n        \n        <Popup trigger={<button className=\"details-button\"> Show detailed forcast</button>} position=\"top\" className=\"weather-details\" modal>\n        \n        \n        {data.map(hour => \n    <>\n    <div className=\"weather-detailed-description\">\n        <div>\n        <p style={{color: `red`}}>{hour.dt_txt.slice(11, 16)}</p>    \n        </div>\n        <div className=\"weather-info\">\n\n        <div>\n        <img src={getIcon(hour).length === 1  ? getIcon(hour)[0].icon  : `http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`} alt=\"icon\" />\n        <p>{hour.weather[0].description}</p>\n        </div>\n        <div><p>Temperature: </p><br/>\n        <p>  {(hour.main.temp * 2).toFixed() / 2} </p>                  \n        </div>\n        <div><p>Feels like: </p><br />\n            <p>{(hour.main.feels_like * 2).toFixed() / 2}</p>\n        </div>\n        <div><p>Humidity: </p><br />\n            <p>{hour.main.humidity} %</p>\n        </div>\n\n        </div>\n    </div>\n\n   \n    \n    </>\n    )}\n     \n    \n        </Popup>\n    )\n}\n\nexport default DayDetails","import React from 'react';\nimport Moment from 'react-moment';\nimport DayDetails from './DayDetails'\n\nconst Day = ({ data, icons, getIcon }) => {\n\n    const afternoon = () => data.filter(datum => datum.dt_txt.includes('15:00'))\n    const represent = afternoon().length === 1 ? afternoon() : data.slice(-1)\n    \n    return(\n        <>\n        <div className=\"day-card\">\n            <div>                \n                <Moment format=\"dddd Do of MMMM YYYY\">\n                    {data[0].dt_txt}\n                </Moment>        \n            </div>        \n            \n        \n        <img src={getIcon(represent[0]).length === 1  ? getIcon(represent[0])[0].icon  : `http://openweathermap.org/img/wn/${represent[0].weather[0].icon}@2x.png`} alt=\"icon\" />\n        <div><p>{represent[0].weather[0].description}</p></div>\n        <div>temperature: {(represent[0].main.temp * 2).toFixed() / 2}</div>\n        <div>feels like: {(represent[0].main.feels_like * 2).toFixed() / 2}</div>\n        <div>humidity: {represent[0].main.humidity} %</div>\n        <DayDetails data={data} icons={icons} getIcon={getIcon}/>\n        </div>\n        </>\n    )\n}\n\nexport default Day\n","import React, { useState, useEffect } from 'react'\nimport Day from './Day'\n\nconst DaysList = ({ data, icons, getIcon }) => {\n\nconst tomorrow = data[7].dt_txt.slice(0, 10)\nconst secondDay = data[15].dt_txt.slice(0, 10)\nconst thirdDay = data[23].dt_txt.slice(0, 10)\nconst fourthDay = data[31].dt_txt.slice(0, 10)\nconst fifthDay = data[39].dt_txt.slice(0, 10)\n\nconst weatherTomorrow = data.filter(datum => datum.dt_txt.includes(tomorrow))\nconst weatherSecondDay = data.filter(datum => datum.dt_txt.includes(secondDay))\nconst weatherThirdDay = data.filter(datum => datum.dt_txt.includes(thirdDay))\nconst weatherFourthDay = data.filter(datum => datum.dt_txt.includes(fourthDay))\nconst weatherFifthDay = data.filter(datum => datum.dt_txt.includes(fifthDay))\n\nconst combinedWeather = [weatherTomorrow, weatherSecondDay, weatherThirdDay, weatherFourthDay, weatherFifthDay]\n\n\nconst [dailyData, setDailyData] = useState([]);\n\nuseEffect(() => \n    setData(), [data])\n\nconst setData = () => {\n    setDailyData(\n        combinedWeather\n    )\n}\n\n    return (\n        <>\n            <h2><span>Five days forcast</span></h2>\n        <div className=\"days-list\">\n            {\n                dailyData.map(day => <Day data={day} icons={icons} key={day.dt_txt} getIcon={getIcon}/>)\n            }\n        </div>\n        </>\n    )\n}\n\nexport default DaysList\n","export default __webpack_public_path__ + \"static/media/clear sky.a550a2e1.jpg\";","export default __webpack_public_path__ + \"static/media/fewClouds.a1d2b088.JPG\";","export default __webpack_public_path__ + \"static/media/overcastClouds.d1785288.JPG\";","export default __webpack_public_path__ + \"static/media/scatteredClouds.a462affe.JPG\";","export default __webpack_public_path__ + \"static/media/showerRain.96ec29d2.JPG\";","export default __webpack_public_path__ + \"static/media/rain.66ccf748.JPG\";","export default __webpack_public_path__ + \"static/media/thunder.8736d29a.JPG\";","export default __webpack_public_path__ + \"static/media/snow.7c461060.JPG\";","export default __webpack_public_path__ + \"static/media/mist.9465e18f.JPG\";","export default __webpack_public_path__ + \"static/media/moon.11d014d6.JPG\";","export default __webpack_public_path__ + \"static/media/moonClouds.dd00fbe7.JPG\";","export default __webpack_public_path__ + \"static/media/January.23534ef2.jpg\";","export default __webpack_public_path__ + \"static/media/February.7a474760.jpg\";","export default __webpack_public_path__ + \"static/media/March.bdf3c242.jpg\";","export default __webpack_public_path__ + \"static/media/April.8e442680.jpg\";","export default __webpack_public_path__ + \"static/media/May.a0bcf772.jpg\";","export default __webpack_public_path__ + \"static/media/June.11fc9dc6.jpg\";","export default __webpack_public_path__ + \"static/media/July.1810fe01.jpg\";","export default __webpack_public_path__ + \"static/media/August.34b1b7fe.jpg\";","export default __webpack_public_path__ + \"static/media/September.2ddc9b48.jpg\";","export default __webpack_public_path__ + \"static/media/October.0e52de58.jpg\";","export default __webpack_public_path__ + \"static/media/November.0e88db34.jpg\";","export default __webpack_public_path__ + \"static/media/December.eb90921d.jpg\";","import React from 'react';\nimport CurrentWeather from './CurrentWeather';\nimport Title from './Title'\nimport Search from './Search'\nimport DaysList from './DaysList';\nimport clearSky from './images/icons/clear sky.jpg'\nimport fewClouds from './images/icons/fewClouds.JPG'\nimport overcastClouds from './images/icons/overcastClouds.JPG'\nimport scatteredClouds from './images/icons/scatteredClouds.JPG'\nimport showerRain from './images/icons/showerRain.JPG'\nimport rain from './images/icons/rain.JPG'\nimport thunder from './images/icons/thunder.JPG'\nimport snow from './images/icons/snow.JPG'\nimport mist from './images/icons/mist.JPG'\nimport moon from './images/icons/moon.JPG'\nimport moonClouds from './images/icons/moonClouds.JPG'\nimport january from './images/months/January.jpg'\nimport february from './images/months/February.jpg'\nimport march from './images/months/March.jpg'\nimport april from './images/months/April.jpg'\nimport may from './images/months/May.jpg'\nimport june from './images/months/June.jpg'\nimport july from './images/months/July.jpg'\nimport august from './images/months/August.jpg'\nimport september from './images/months/September.jpg'\nimport october from './images/months/October.jpg'\nimport november from './images/months/November.jpg'\nimport december from './images/months/December.jpg'\n\nconst today = new Date\nconst mon = today.getMonth()\nconst bcgImages = [january, february, march, april, may, june, july, august, september, october, november, december]\n\n\n\nconst icons = [\n    {\n        id: '01d',\n        icon: `${clearSky}`\n    },\n    {\n        id: '01n',\n        icon: `${moon}`\n    },\n    {\n        id: '02d',\n        icon: `${fewClouds}`\n    },\n    {\n        id: '02n',\n        icon: `${moonClouds}`\n    },\n    {\n        id: '03',\n        icon: `${scatteredClouds}`\n    },\n    {\n        id: '04',\n        icon: `${overcastClouds}`\n    },\n    {\n        id: '09',\n        icon: `${showerRain}`\n    },\n    {\n        id: '10',\n        icon: `${rain}`\n    },\n    {\n        id: '11',\n        icon: `${thunder}`\n    },\n    {\n        id: '13',\n        icon: `${snow}`\n    },\n    {\n        id: '50',\n        icon: `${mist}`\n    },\n    \n]\n\nconst getIcon = (forcast) => {\n   return icons.filter(icon => forcast.weather[0].icon.includes(icon.id))\n}\n\nconst Home = ({ data, onSearch }) => {\n    \n    \n    return (\n       <>\n       \n       <Search onSearch={onSearch}/>\n       <Title data={data} />\n       <div className=\"home\" style={{backgroundImage: `url(${bcgImages[mon]})`}}>        \n        \n        <CurrentWeather data={data.list} icons={icons} getIcon={getIcon}/>\n        <DaysList data={data.list} icons={icons} getIcon={getIcon}/>\n       </div>\n       </>\n    )\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/compass.b238d7f5.jpg\";","import React from 'react';\nimport compass from './images/compass.jpg'\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <p><span className=\"red\">T</span>his medieval-themed weather app was build as a side project by Aleksander Szostakowski. New features might or might not be added, time allowing.\n                What can be said for certain is that after next Greek calends a Latin version will be made available. <br />\n                <span className=\"red\">T</span>he app uses <a href=\"https://openweathermap.org/api\" target=\"_blank\">Open Weather API</a> to acces fresh and (mostly) reliable informations about the state of the elements. <br />\n                <span className=\"red\">I</span>mages in the main site's background are taken from <a href=\"https://en.wikipedia.org/wiki/Tr%C3%A8s_Riches_Heures_du_Duc_de_Berry#:~:text=It%20is%20a%20book%20of,Berry%2C%20by%20the%20Limbourg%20brothers.\" target=\"_blank\">The Book of Hours of the Duke of Berry</a> crafted by Limbourg brothers.\n                They depict typical activities you might engage in during current month (well at least if you happen to live in the beginning of 15th century). <br />\n                <span className=\"red\">W</span>herever and whenever you are make sure to <span className=\"red\">s</span>tay <span className=\"red\">s</span>afe and enjoy your weather!\n            </p>\n            <img src={compass}/>        \n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <ul>\n            <li><NavLink activeClassName=\"active\" exact to='/'>Home</NavLink></li>\n            <li><NavLink activeClassName=\"active\" to='/about'>About</NavLink></li>\n        </ul>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport compass from './images/compass.jpg'\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <p><span className=\"red\">L</span>oading........</p>          \n            <img src={compass}/>\n                       \n        </div>\n    )\n}\n\nexport default Loading;","export default __webpack_public_path__ + \"static/media/where-in-tabula.eb8481e8.jpg\";","import React, { useState } from 'react';\nimport map from './images/where-in-tabula.jpg'\n\nconst LocationError = ({ onSearch, getLocation }) => {\n    const [text, setText] = useState('')\n\n    const handleChange = (e) => {\n        setText(e.target.value)        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSearch(text)\n    }\n    return (\n        <div className=\"error-page\">\n        <h1><span className=\"red\">O</span>ur astrologers are <span className=\"red\">clueless</span>!</h1>\n        <div className=\"error-search\">\n            <div>\n                <p><span className=\"red\">S</span>adly we ware unable to determine, where in the <span className=\"red\">W</span>orld are you. <br />\n                <span className=\"red\">P</span>lease allow geolocation in your browser or enter the name of a place you want to get forcast for. </p>\n            </div>\n            <div>\n                <form onSubmit={handleSubmit} className=\"search\">\n                    <input type=\"text\" onChange={handleChange} />\n                    <input type=\"submit\" value=\"Search\" className=\"submit-button\" />\n                </form>\n            </div>\n        </div>\n        <img className=\"location-img\" src={map}/>\n    </div>\n    )\n}\n\nexport default LocationError;","export default __webpack_public_path__ + \"static/media/beatus-medieval-map.b09bd280.jpg\";","import React, { useState } from 'react';\nimport map from './images/beatus-medieval-map.jpg'\n\n\nconst SearchError = ({ onSearch }) => {\n    const [text, setText] = useState('')\n\n    const handleChange = (e) => {\n        setText(e.target.value)        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSearch(text)\n    }\n    return (\n        <div className=\"error-page\">\n            <h1><span className=\"red\">O</span>ur cartographers are <span className=\"red\">confused</span>!</h1>\n            <div className=\"error-search\">\n                <div>\n                    <p><span className=\"red\">W</span>e regret to admit that we ware unable to find the place, you ware looking for. <br />\n                    <span className=\"red\">P</span>lease try again with another search request.</p>\n                </div>\n                <div>\n                    <form onSubmit={handleSubmit} className=\"search\">\n                        <input type=\"text\" onChange={handleChange} />\n                        <input type=\"submit\" value=\"Search\" className=\"submit-button\" />\n                    </form>\n                </div>\n            </div>\n            <img className=\"search-img\" src={map}/>\n        </div>\n        \n    )\n}\n\nexport default SearchError;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\nimport Navbar from './Navbar';\nimport Loading from './Loading';\nimport LocationError from './LocationEroor';\nimport SearchError from './SearchError';\nimport './App.css';\nimport key from './keys';\n\nclass App extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      data: null,\n      searchError: false,\n      lacationError: false,      \n    }\n  }\n\n  componentDidMount() {\n    this.getLocation()\n  }\n\n  getLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      this.fetchData(lat, lon);      \n    }, () => this.setState({ locationError: true }))\n  }\n\n  fetchData = (lat, lon) => {         \n      fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${key}&units=metric`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ \n        data,        \n     })\n    })\n  }\n\n  onSearch = (text) => {\n    \n    this.setState({ searchError: false, locationError: false})\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${text}&appid=44b75055e774cc3ad102fa969f7e72c6&units=metric`)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        this.setState({ searchError: true })\n      }\n    })\n      .then(data => {\n        this.setState({\n          data,\n        })\n      })\n      .catch(this.setState({ searchError: true}))      \n  }\n\n\n  render () {    \n    const { data } = this.state\n    const renderData = () => {\n      if (data) {\n        return <Home data={data} onSearch={this.onSearch}/>\n      } else if (this.state.locationError && !this.state.searchError) {\n        return <LocationError onSearch={this.onSearch} getLocation={this.getLocation}/>\n      } else if (this.state.searchError) {\n        return <SearchError onSearch={this.onSearch}/>\n      } else {\n        return <Loading />\n      }\n    }\n    \n    return (\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path='/weather' render={() => renderData()} />\n          <Route path='/about' component={About} />\n        </Switch>\n      \n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n /*\n        \n       \n        <Footer />\n        */","const key = '44b75055e774cc3ad102fa969f7e72c6'\n\nexport default key;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}